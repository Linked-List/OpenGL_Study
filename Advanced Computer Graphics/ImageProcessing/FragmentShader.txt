#version 400 core

uniform sampler2D tex;
uniform int mode;

in vec2 v2ftexCoord;

out vec4 color;

void main()
{
	vec4 c0 = textureOffset(tex,v2ftexCoord,ivec2(-1,1));
	vec4 c1 = textureOffset(tex,v2ftexCoord,ivec2(0,1));
	vec4 c2 = textureOffset(tex,v2ftexCoord,ivec2(1,1));
	vec4 c3 = textureOffset(tex,v2ftexCoord,ivec2(-1,0));
	vec4 c4 = texture(tex,v2ftexCoord);
	vec4 c5 = textureOffset(tex,v2ftexCoord,ivec2(1,0));
	vec4 c6 = textureOffset(tex,v2ftexCoord,ivec2(-1,-1));
	vec4 c7 = textureOffset(tex,v2ftexCoord,ivec2(0,-1));
	vec4 c8 = textureOffset(tex,v2ftexCoord,ivec2(1,-1));

	if(mode == 0)
		color = texture(tex,v2ftexCoord); // Original
	else if(mode == 1)
		color = vec4(1.0) - texture(tex,v2ftexCoord); // Negative
	else if(mode == 2)
		color = (c0+2*c1+c2+2*c3+4*c4+2*c5+c6+2*c7+c8)/16.0; // 3x3 Gaussian Blur
	else
		color = c4*1.5; // Brightness
}